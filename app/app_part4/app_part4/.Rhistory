x <- x[order(x$vary),]
return(x[1:3,])
}
comp(x,x[1,],b)
comp <- function(x, v, b){
n <- nrow(x)
br <- b+9
for(i in 1:n){
x$vary[i] <- ((x$park.num[i] - v$park.num)/10)^2 + ((x$heal.num[i] - v$heal.num)/10)^2 + ((x$lib.num[i] - v$lib.num)/10)^2 + ((x$rest.num[i] - v$rest.num)/1000)^2 + ((x[i,b+9] - v[1,b+9])/50)^2 +((x$density[i]-v$density)*100)^2
}
x <- x[order(x$vary),]
return(x[1:3,])
}
comp(x,x[1,],b)
comp <- function(x, v, b){
n <- nrow(x)
br <- b+9
for(i in 1:n){
x$vary[i] <- ((x$park.num[i] - v$park.num)/10)^2 + ((x$heal.num[i] - v$heal.num)/5)^2 + ((x$lib.num[i] - v$lib.num)/5)^2 + ((x$rest.num[i] - v$rest.num)/1000)^2 + ((x[i,b+9] - v[1,b+9])/50)^2 +((x$density[i]-v$density)*100)^2
}
x <- x[order(x$vary),]
return(x[1:3,])
}
comp(x,x[1,],b)
s <- split("10025, 10026", ", ")
s
View(x)
city <- NYC
c <- city[city$City == "LA", ]
View(c)
nrow(c)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nb <- read.csv("../data/City Data/NBHD.csv")
colnames(nb)[1] <- "NB"
nb$NB <- as.character(nb$NB)
main <- read.csv("../data/City Data/Main.csv")
require("../doc/compare.R")
setwd("~/Columbia U/Courses/Spring 2017/ADS/Project 2/app")
require("../doc/compare.R")
runApp()
View(comp)
runApp()
runApp()
runApp()
runApp()
comp(NYC, NYC[1], 0)
comp(NYC, NYC[1,], 0)
View(main)
runApp()
top3 <- reactive({
city <- main[main$City == input$target_city,]
st <- NA
# If user chooses his current neighbirhood.
if(input$current_neighborhood != "NA"){
st <- main[main$Neighborhood == input$current_neighborhood, ]
top <- comp(city, st, input$current_br)
}
# If not
else{
n <- nrow(city)
br <- input$manual_br + 9
top3 <- reactive({
city <- main[main$City == input$target_city,]
st <- NA
# If user chooses his current neighbirhood.
if(input$current_neighborhood != "NA"){
st <- main[main$Neighborhood == input$current_neighborhood, ]
top <- comp(city, st, input$current_br)
}
# If not
else{
n <- nrow(city)
br <- input$manual_br + 9
up <- input$manual_rent[1]
down <- input$manual_rent[2]
# Check rent range.
dest <- city[city[,br] <= up & city[,br] >= down, ]
if(nrow(dest) <= 3 & nrow(dest) >0){
top <- dest
}
if(nrow(dest) == 0){
top <- NA
}
else{
p <- input$parks
r <- input$restaurants
h <- input$health
l <- input$libraries
top <- score(dest, br, p, h, l, r)
}
}
return(top)
})
input$current_neighborhood <- "Upper West Side"
current_neighborhood <- "Upper West Side"
st <- main[main$Neighborhood == current_neighborhood, ]
View(st)
city <- NYC
top <- comp(city, st, 0)
View(top)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
nb <- read.csv("../data/City Data/NBHD.csv")
colnames(nb)[1] <- "NB"
nb$NB <- as.character(nb$NB)
main <- read.csv("../data/City Data/Main.csv")
top<- NA
top[1]
top[3]
top <- read.csv("../data/City Data/Main.csv")
top <- top[3,]
zip1 <- nb$ZipCode[nb$NB == top$Neighborhood[1]]
zip2 <- nb$ZipCode[nb$NB == top$Neighborhood[2]]
zip3 <- nb$ZipCode[nb$NB == top$Neighborhood[3]]
zip1
zip1 <- nb$ZipCode[nb$NB == "Upper West Side"]
zip1
zip1 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]])
zip1
zip1 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]])
zip2 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]])
zip3 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[3]])
top <- main[3,]
zip1 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]])
zip2 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]])
zip3 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[3]])
zip1 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]])
zip2 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]])
zip3 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[3]])
zip2 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]])
top <- main[3,]
top <- main[1:3,]
zip1 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]])
zip2 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]])
zip3 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[3]])
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
?split
nb <- read.csv("../data/City Data/NBHD.csv")
colnames(nb)[1] <- "NB"
nb$NB <- as.character(nb$NB)
main <- read.csv("../data/City Data/Main.csv")
source("../doc/compare.R")
source("../doc/score.R")
top <- main[1:3,]
zip1 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]])
zip2 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]])
zip3 <- as.character(nb$ZipCode[nb$NB == top$Neighborhood[3]])
zip1 <- strsplit(zip1, ", ")
zip1
runApp()
runApp()
zip1[[1]]
zipcode <- list(zip1[[1]], zip2[[1]], zip3[[1]])
zip4 <- NA
zipcode <- list(zip1[[1]], zip2[[1]], zip4[[1]])
zipcode
zip1 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]]), ", ")
zip2 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]]), ", ")
zip3 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[3]]), ", ")
zipcode <- list(zip1[[1]], zip2[[1]], zip3[[1]])
zip[[1]][2]
zipcode[[1]][2]
runApp()
runApp()
runApp()
runApp()
nb <- read.csv("../data/City Data/NBHD.csv")
mode(nb$NB[1])
View(nb)
nb$NB <- as.character(nb$NB)
mode(nb$NB[1])
View(nb)
View(main)
source("../doc/crowded.R")
main <- crowd(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
runApp()
runApp()
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
View(main)
main <- crowd(main)
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
View(main)
main$density[5]
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main$density[1:10] >=150
runApp()
runApp()
runApp()
runApp()
zipcode
library(ggmap)
ggmap("los angeles")
map<-get_map(location='united states', zoom=4, maptype = "terrain",
source='google',color='color')
get_map(location='new york city', zoom=4, maptype = "terrain",
source='google',color='color')
?ggmap
map<-get_map(location='united states', zoom=4, maptype = "terrain",
source='google',color='color')
map<-get_map(location='new york city', zoom=4, maptype = "terrain",
source='google',color='color')
require(zipcode)
data(zipcode)
install.packages(zipcode)
install.packages("zipcode")
require(zipcode)
data(zipcode)
zipcode <- c(10025, 10024, 10023)
zip <- clean.zipcodes(zipcode)
require(ggmap)
map<-get_map(location='united states', zoom=4, maptype = "terrain",
source='google',color='color')
map<-get_map(location='new york city', zoom=4, maptype = "terrain",
source='google',color='color')
zip <- clean.zipcodes(zipcode)
pop <- c(1,2,3)
zipcode <- c(10025, 10024, 10023)
zip <- clean.zipcodes(zipcode)
Median <- c(1,2,3)
census <- cbind(zip, Median)
require(ggmap)
map<-get_map(location='new york city', zoom=4, maptype = "terrain",
source='google',color='color')
require("ggplot2")
ggmap(map) + geom_point(
aes(x=longitude, y=latitude, show_guide = TRUE, colour=Median),
data=census, alpha=.8, na.rm = T)  +
scale_color_gradient(low="beige", high="blue")
census <- merge(census, zipcode, by.x='zip', by.y='zip')
View(census)
zipcode <- c(10025, 10024, 10023)
zip <- clean.zipcodes(zipcode)
Median <- c(1,2,3)
census <- data.frame(zip = zip, Median = Median)
census <- merge(census, zipcode, by.x='zip', by.y='zip')
zip <- c(10025, 10024, 10023)
zip <- clean.zipcodes(zip)
Median <- c(1,2,3)
census <- data.frame(zip = zip, Median = Median)
census <- merge(census, zipcode, by.x='zip', by.y='zip')
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
main <- read.csv("../data/City Data/main.csv")
View(main)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Columbia U/Courses/Spring 2017/ADS/Project 2/app")
source("../doc/compare.R")
source("../doc/score.R")
#source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
#main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("../doc/crowded.R")
main <- crowd(main = main)
View(main)
source("../doc/crowded.R")
View(main)
main <- read.csv("../data/City Data/Main.csv")
View(main)
main <- crowd(main)
View(main)
main <- read.csv("../data/City Data/Main.csv")
View(main)
main$density[2] < 50
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
main <- read.csv("../data/City Data/Main.csv")
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
main <- read.csv("../data/City Data/Main.csv")
View(main)
m <- main[31,]
View(m)
if(m$density[i] < 50){
m$density[i] <- "Sparse"
}
else{
if(m$density[i] > 150){
m$density[i] <- "Crowded"
}
else{
m$density[i] <- "Medium"
}
}
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
View(crowd)
main <- crowd(main)
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
source("../doc/compare.R")
source("../doc/score.R")
source("../doc/crowded.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
main <- crowd(main)
nb$NB <- as.character(nb$NB)
View(main)
runApp()
runApp()
runApp()
View(score)
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
source("../doc/compare.R")
source("../doc/Score.R")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
nb$NB <- as.character(nb$NB)
View(comp)
runApp()
View(main)
runApp()
shiny::runApp()
runApp()
main <- read.csv("../data/City Data/Main.csv")
top <- main[3,]
zip1 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]]), ", ")
zip2 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]]), ", ")
zip3 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[3]]), ", ")
nb <- read.csv("../data/City Data/NBHD.csv")
main <- read.csv("../data/City Data/Main.csv")
nb$NB <- as.character(nb$NB)
zip1 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]]), ", ")
zip2 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]]), ", ")
zip3 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[3]]), ", ")
top <- main[1:3,]
zip1 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[1]]), ", ")
zip2 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[2]]), ", ")
zip3 <- strsplit(as.character(nb$ZipCode[nb$NB == top$Neighborhood[3]]), ", ")
library(shiny)
library(choroplethr)
library(choroplethrZip)
library(dplyr)
source("../doc/compare.R")
source("../doc/Score.R")
View(comp)
View(score)
runApp()
runApp()
runApp()
runApp()
# Generate Standard Brownian Motion by generating a variable with standard normal distribution each time node, as i.i.d. The cumsum has mean zero and variance t, and motions on two disjoint intervals are independent, so the difference between two time node has variance t-s.
t <- c(0:50)
x<- rnorm(length(t)-1) # Defalut mean= 0 var = 1.
value <- c(0, cumsum(x))
plot(t, value, type = "l", ylim = c(-20,20))
for(i in 1:9){
x<- rnorm(length(t)-1)
value <- c(0, cumsum(x))
lines(value)
}
shiny::runApp()
shiny::runApp()
